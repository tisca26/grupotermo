-- MySQL Script generated by MySQL Workbench
-- 05/10/17 17:34:36
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema grupotermo
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema grupotermo
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `grupotermo` DEFAULT CHARACTER SET utf8 ;
USE `grupotermo` ;

-- -----------------------------------------------------
-- Table `grupotermo`.`clientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`clientes` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`clientes` (
  `clientes_id` INT NOT NULL AUTO_INCREMENT,
  `razon_social` VARCHAR(200) NULL,
  `rfc` VARCHAR(15) NULL,
  `tel_fijo` VARCHAR(15) NULL,
  `email` VARCHAR(70) NULL,
  `direccion` VARCHAR(100) NULL,
  `clabe` VARCHAR(25) NULL,
  PRIMARY KEY (`clientes_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`empresas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`empresas` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`empresas` (
  `empresas_id` INT NOT NULL AUTO_INCREMENT,
  `razon_social` VARCHAR(200) NULL,
  `rfc` VARCHAR(15) NULL,
  `tel_fijo` VARCHAR(15) NULL,
  `tel_movil` VARCHAR(15) NULL,
  `email` VARCHAR(70) NULL,
  `direccion` VARCHAR(100) NULL,
  PRIMARY KEY (`empresas_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`obras`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`obras` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`obras` (
  `obras_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(200) NULL,
  `fecha_inicio` DATE NULL,
  `fecha_fin` DATE NULL,
  `total_real` DECIMAL(14,2) NULL,
  `total_autorizado` DECIMAL(14,2) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  `clientes_id` INT NOT NULL,
  `empresas_id` INT NOT NULL,
  `es_por_zonas` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`obras_id`),
  INDEX `fk_obras_clientes1_idx` (`clientes_id` ASC),
  INDEX `fk_obras_empresas1_idx` (`empresas_id` ASC),
  CONSTRAINT `clientes_id`
    FOREIGN KEY (`clientes_id`)
    REFERENCES `grupotermo`.`clientes` (`clientes_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `empresas_id`
    FOREIGN KEY (`empresas_id`)
    REFERENCES `grupotermo`.`empresas` (`empresas_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`zonas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`zonas` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`zonas` (
  `zonas_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `fecha_inicio` DATE NULL,
  `fecha_fin` DATE NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`zonas_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`unidades`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`unidades` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`unidades` (
  `unidades_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(200) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`unidades_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`conceptos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`conceptos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`conceptos` (
  `conceptos_id` INT NOT NULL AUTO_INCREMENT,
  `conceptos_catalogo_id` INT NOT NULL DEFAULT 0,
  `clave_en_obra` VARCHAR(100) NULL,
  `clave` VARCHAR(50) NULL,
  `nombre` VARCHAR(500) NULL,
  `descripcion_corta` VARCHAR(200) NULL,
  `cantidad` DECIMAL(10,2) NOT NULL DEFAULT 0,
  `precio_unitario` DECIMAL(8,2) NOT NULL DEFAULT 0,
  `costo_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `total_real` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `total_autorizado` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `unidades_id` INT NOT NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`conceptos_id`),
  INDEX `fk_conceptos_unidades1_idx` (`unidades_id` ASC),
  CONSTRAINT `conceptos_unidades_id`
    FOREIGN KEY (`unidades_id`)
    REFERENCES `grupotermo`.`unidades` (`unidades_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`obras_etapas_fases_zonas_conceptos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`obras_etapas_fases_zonas_conceptos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`obras_etapas_fases_zonas_conceptos` (
  `obras_etapas_fases_zonas_conceptos_id` INT NOT NULL AUTO_INCREMENT,
  `obras_id` INT NOT NULL DEFAULT 0,
  `etapas_id` INT NOT NULL DEFAULT 0,
  `fases_id` INT NOT NULL DEFAULT 0,
  `zonas_id` INT NOT NULL DEFAULT 0,
  `conceptos_id` INT NOT NULL DEFAULT 0,
  `fecha_inicio` DATE NULL,
  `fecha_fin` DATE NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`obras_etapas_fases_zonas_conceptos_id`),
  INDEX `fk_obra_fases_etapas_zonas_conceptos_obras1_idx` (`obras_id` ASC),
  INDEX `oefzc_etapas_index` (`etapas_id` ASC),
  INDEX `oefzc_fases_index` (`fases_id` ASC),
  INDEX `oefzc_zonas_index` (`zonas_id` ASC),
  INDEX `oefzc_conceptos_index` (`conceptos_id` ASC),
  CONSTRAINT `fk_obra_fases_etapas_zonas_conceptos_obras1`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`gastos_indirectos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`gastos_indirectos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`gastos_indirectos` (
  `gastos_indirectos_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `costo_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  PRIMARY KEY (`gastos_indirectos_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`otros_gastos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`otros_gastos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`otros_gastos` (
  `otros_gastos_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `costo_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  PRIMARY KEY (`otros_gastos_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`activos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`activos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`activos` (
  `activos_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `clave` VARCHAR(45) NULL,
  `precio_propio` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `capacidad_carga` DECIMAL(14,2) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  `unidades_id` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`activos_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`mano_de_obra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`mano_de_obra` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`mano_de_obra` (
  `mano_de_obra_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  `unidad_id` INT NOT NULL DEFAULT 0,
  `descripcion_actividades` VARCHAR(500) NULL,
  PRIMARY KEY (`mano_de_obra_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`servicios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`servicios` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`servicios` (
  `servicios_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `precio_propio` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  `unidades_id` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`servicios_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`materiales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`materiales` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`materiales` (
  `materiales_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  `unidades_id` INT NOT NULL,
  `precio_propio` DECIMAL(14,2) NOT NULL DEFAULT 0,
  PRIMARY KEY (`materiales_id`),
  INDEX `fk_materiales_unidades1_idx` (`unidades_id` ASC),
  CONSTRAINT `fk_materiales_unidades1`
    FOREIGN KEY (`unidades_id`)
    REFERENCES `grupotermo`.`unidades` (`unidades_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`etapas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`etapas` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`etapas` (
  `etapas_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `fecha_inicio` DATE NULL,
  `fecha_fin` DATE NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`etapas_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`estimaciones`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`estimaciones` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`estimaciones` (
  `estimaciones_id` INT NOT NULL AUTO_INCREMENT,
  `obras_id` INT NOT NULL,
  `nombre` VARCHAR(100) NULL,
  `fecha` DATE NULL,
  `tipo_estimacion` TINYINT NULL,
  `subtotal` DECIMAL(14,2) NULL,
  `iva` DECIMAL(14,2) NULL,
  PRIMARY KEY (`estimaciones_id`),
  INDEX `fk_estimaciones_obras1_idx` (`obras_id` ASC),
  CONSTRAINT `estimaciones_obras_id`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`estimaciones_elementos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`estimaciones_elementos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`estimaciones_elementos` (
  `estimaciones_elementos_id` INT NOT NULL AUTO_INCREMENT,
  `estimaciones_id` INT NOT NULL,
  `padre_id` INT NULL,
  `es_concepto` TINYINT NULL,
  `elemento_id` INT NULL,
  `nombre` VARCHAR(250) NULL,
  `acumulado` DECIMAL(14,2) NULL,
  `avance` DECIMAL(14,2) NULL,
  PRIMARY KEY (`estimaciones_elementos_id`),
  INDEX `fk_estimaciones_elementos_estimaciones1_idx` (`estimaciones_id` ASC),
  CONSTRAINT `estimaciones_elementos_estimaciones_id`
    FOREIGN KEY (`estimaciones_id`)
    REFERENCES `grupotermo`.`estimaciones` (`estimaciones_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`union_materiales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`union_materiales` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`union_materiales` (
  `union_materiales_id` INT NOT NULL AUTO_INCREMENT,
  `materiales_id` INT NOT NULL,
  `tabla` VARCHAR(45) NOT NULL,
  `elemento_id` INT NOT NULL,
  `obras_id` INT NOT NULL,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `costo_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `proveedor_id` INT NOT NULL DEFAULT 0,
  `es_rentado` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`union_materiales_id`),
  INDEX `fk_union_materiales_materiales1_idx` (`materiales_id` ASC),
  INDEX `fk_union_materiales_obras1_idx` (`obras_id` ASC),
  CONSTRAINT `um_materiales_id`
    FOREIGN KEY (`materiales_id`)
    REFERENCES `grupotermo`.`materiales` (`materiales_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `um_obras_id`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`union_servicios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`union_servicios` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`union_servicios` (
  `union_servicios_id` INT NOT NULL AUTO_INCREMENT,
  `servicios_id` INT NOT NULL,
  `tabla` VARCHAR(45) NOT NULL,
  `elemento_id` INT NOT NULL,
  `obras_id` INT NOT NULL,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `costo_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `proveedor_id` INT NOT NULL DEFAULT 0,
  `es_rentado` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`union_servicios_id`),
  INDEX `fk_union_servicios_servicios1_idx` (`servicios_id` ASC),
  INDEX `fk_union_servicios_obras1_idx` (`obras_id` ASC),
  CONSTRAINT `us_servicios_id`
    FOREIGN KEY (`servicios_id`)
    REFERENCES `grupotermo`.`servicios` (`servicios_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `us_obras_id`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`union_mano_de_obra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`union_mano_de_obra` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`union_mano_de_obra` (
  `union_mano_de_obra_id` INT NOT NULL AUTO_INCREMENT,
  `mano_de_obra_id` INT NOT NULL,
  `tabla` VARCHAR(45) NOT NULL,
  `elemento_id` INT NOT NULL,
  `obras_id` INT NOT NULL,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `costo_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  PRIMARY KEY (`union_mano_de_obra_id`),
  INDEX `fk_union_mano_de_obra_mano_de_obra1_idx` (`mano_de_obra_id` ASC),
  INDEX `fk_union_mano_de_obra_obras1_idx` (`obras_id` ASC),
  CONSTRAINT `umo_mano_de_obra_id`
    FOREIGN KEY (`mano_de_obra_id`)
    REFERENCES `grupotermo`.`mano_de_obra` (`mano_de_obra_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `umo_obras_id`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`union_activos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`union_activos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`union_activos` (
  `union_activos_id` INT NOT NULL AUTO_INCREMENT,
  `activos_id` INT NOT NULL,
  `tabla` VARCHAR(45) NOT NULL,
  `elemento_id` INT NOT NULL,
  `obras_id` INT NOT NULL,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `costo_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `proveedor_id` INT NOT NULL DEFAULT 0,
  `es_rentado` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`union_activos_id`),
  INDEX `fk_union_activos_activos1_idx` (`activos_id` ASC),
  INDEX `fk_union_activos_obras1_idx` (`obras_id` ASC),
  CONSTRAINT `ua_activos_id`
    FOREIGN KEY (`activos_id`)
    REFERENCES `grupotermo`.`activos` (`activos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ua_obras_id`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`union_gastos_indirectos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`union_gastos_indirectos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`union_gastos_indirectos` (
  `union_gastos_indirectos_id` INT NOT NULL AUTO_INCREMENT,
  `gastos_indirectos_id` INT NOT NULL,
  `tabla` VARCHAR(45) NOT NULL,
  `elemento_id` INT NOT NULL,
  `obras_id` INT NOT NULL,
  PRIMARY KEY (`union_gastos_indirectos_id`),
  INDEX `fk_union_gastos_indirectos_gastos_indirectos1_idx` (`gastos_indirectos_id` ASC),
  INDEX `fk_union_gastos_indirectos_obras1_idx` (`obras_id` ASC),
  CONSTRAINT `ugi_gastos_indirectos_id`
    FOREIGN KEY (`gastos_indirectos_id`)
    REFERENCES `grupotermo`.`gastos_indirectos` (`gastos_indirectos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ugi_obras_id`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`union_otros_gastos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`union_otros_gastos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`union_otros_gastos` (
  `union_otros_gastos_id` INT NOT NULL AUTO_INCREMENT,
  `otros_gastos_id` INT NOT NULL,
  `tabla` VARCHAR(45) NOT NULL,
  `elemento_id` INT NOT NULL,
  `obras_id` INT NOT NULL,
  PRIMARY KEY (`union_otros_gastos_id`),
  INDEX `fk_union_otros_gastos_otros_gastos1_idx` (`otros_gastos_id` ASC),
  INDEX `fk_union_otros_gastos_obras1_idx` (`obras_id` ASC),
  CONSTRAINT `uog_otros_gastos_id`
    FOREIGN KEY (`otros_gastos_id`)
    REFERENCES `grupotermo`.`otros_gastos` (`otros_gastos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `uog_obras_id`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`estimacion_orden_compra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`estimacion_orden_compra` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`estimacion_orden_compra` (
  `estimacion_orden_compra_id` INT NOT NULL AUTO_INCREMENT,
  `estimaciones_id` INT NOT NULL,
  PRIMARY KEY (`estimacion_orden_compra_id`),
  INDEX `fk_estimacion_orden_compra_estimaciones1_idx` (`estimaciones_id` ASC),
  CONSTRAINT `estimaciones_estimacion_orden_compra_id`
    FOREIGN KEY (`estimaciones_id`)
    REFERENCES `grupotermo`.`estimaciones` (`estimaciones_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`estimaciones_facturas`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`estimaciones_facturas` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`estimaciones_facturas` (
  `estimaciones_facturas_id` INT NOT NULL AUTO_INCREMENT,
  `estimaciones_id` INT NOT NULL,
  PRIMARY KEY (`estimaciones_facturas_id`),
  INDEX `fk_facturas_estimaciones1_idx` (`estimaciones_id` ASC),
  CONSTRAINT `estimaciones_estimaciones_facturas_id`
    FOREIGN KEY (`estimaciones_id`)
    REFERENCES `grupotermo`.`estimaciones` (`estimaciones_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`pagos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`pagos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`pagos` (
  `pagos_id` INT NOT NULL AUTO_INCREMENT,
  `facturas_id` INT NOT NULL,
  PRIMARY KEY (`pagos_id`),
  INDEX `fk_pagos_facturas1_idx` (`facturas_id` ASC),
  CONSTRAINT `facturas_pagos_id`
    FOREIGN KEY (`facturas_id`)
    REFERENCES `grupotermo`.`estimaciones_facturas` (`estimaciones_facturas_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`estimaciones_orden_factura`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`estimaciones_orden_factura` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`estimaciones_orden_factura` (
  `estimacion_orden_compra_id` INT NOT NULL,
  `estimaciones_facturas_id` INT NOT NULL,
  INDEX `fk_estimaciones_orden_factura_estimacion_orden_compra1_idx` (`estimacion_orden_compra_id` ASC),
  INDEX `fk_estimaciones_orden_factura_estimaciones_facturas1_idx` (`estimaciones_facturas_id` ASC),
  CONSTRAINT `eoc_id`
    FOREIGN KEY (`estimacion_orden_compra_id`)
    REFERENCES `grupotermo`.`estimacion_orden_compra` (`estimacion_orden_compra_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ef_id`
    FOREIGN KEY (`estimaciones_facturas_id`)
    REFERENCES `grupotermo`.`estimaciones_facturas` (`estimaciones_facturas_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`materiales_categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`materiales_categoria` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`materiales_categoria` (
  `materiales_categoria_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `descripcion` VARCHAR(250) NULL,
  PRIMARY KEY (`materiales_categoria_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`servicios_categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`servicios_categoria` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`servicios_categoria` (
  `servicios_categoria_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `descripcion` VARCHAR(250) NULL,
  PRIMARY KEY (`servicios_categoria_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`activos_categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`activos_categoria` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`activos_categoria` (
  `activos_categoria_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `descripcion` VARCHAR(250) NULL,
  PRIMARY KEY (`activos_categoria_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`materiales_cat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`materiales_cat` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`materiales_cat` (
  `materiales_id` INT NOT NULL,
  `materiales_categoria_id` INT NOT NULL,
  INDEX `fk_materiales_cat_materiales1_idx` (`materiales_id` ASC),
  INDEX `fk_materiales_cat_materiales_categoria1_idx` (`materiales_categoria_id` ASC),
  CONSTRAINT `materiales_id`
    FOREIGN KEY (`materiales_id`)
    REFERENCES `grupotermo`.`materiales` (`materiales_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `materiales_categoria_id`
    FOREIGN KEY (`materiales_categoria_id`)
    REFERENCES `grupotermo`.`materiales_categoria` (`materiales_categoria_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`servicios_cat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`servicios_cat` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`servicios_cat` (
  `servicios_id` INT NOT NULL,
  `servicios_categoria_id` INT NOT NULL,
  INDEX `fk_servicios_cat_servicios1_idx` (`servicios_id` ASC),
  INDEX `fk_servicios_cat_servicios_categoria1_idx` (`servicios_categoria_id` ASC),
  CONSTRAINT `servicios_id`
    FOREIGN KEY (`servicios_id`)
    REFERENCES `grupotermo`.`servicios` (`servicios_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `servicios_categoria_id`
    FOREIGN KEY (`servicios_categoria_id`)
    REFERENCES `grupotermo`.`servicios_categoria` (`servicios_categoria_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`activos_cat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`activos_cat` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`activos_cat` (
  `activos_id` INT NOT NULL,
  `activos_categoria_id` INT NOT NULL,
  INDEX `fk_activos_cat_activos1_idx` (`activos_id` ASC),
  INDEX `fk_activos_cat_activos_categoria1_idx` (`activos_categoria_id` ASC),
  CONSTRAINT `activos_id`
    FOREIGN KEY (`activos_id`)
    REFERENCES `grupotermo`.`activos` (`activos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `activos_categoria_id`
    FOREIGN KEY (`activos_categoria_id`)
    REFERENCES `grupotermo`.`activos_categoria` (`activos_categoria_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`proveedores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`proveedores` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`proveedores` (
  `proveedores_id` INT NOT NULL AUTO_INCREMENT,
  `razon_social` VARCHAR(200) NULL,
  `rfc` VARCHAR(20) NULL,
  `tel_fijo` VARCHAR(15) NULL,
  `email` VARCHAR(70) NULL,
  `direccion` VARCHAR(100) NULL,
  `clabe` VARCHAR(25) NULL,
  PRIMARY KEY (`proveedores_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`materiales_precios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`materiales_precios` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`materiales_precios` (
  `materiales_precios_id` INT NOT NULL AUTO_INCREMENT,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `materiales_id` INT NOT NULL,
  `proveedores_id` INT NOT NULL,
  PRIMARY KEY (`materiales_precios_id`),
  INDEX `fk_materiales_precios_materiales1_idx` (`materiales_id` ASC),
  INDEX `fk_materiales_precios_proveedores1_idx` (`proveedores_id` ASC),
  CONSTRAINT `fk_materiales_precios_materiales1`
    FOREIGN KEY (`materiales_id`)
    REFERENCES `grupotermo`.`materiales` (`materiales_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_materiales_precios_proveedores1`
    FOREIGN KEY (`proveedores_id`)
    REFERENCES `grupotermo`.`proveedores` (`proveedores_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`cat_paises`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`cat_paises` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`cat_paises` (
  `cat_paises_id` INT NOT NULL AUTO_INCREMENT,
  `clave` VARCHAR(15) NULL,
  `nombre` VARCHAR(70) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`cat_paises_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`cat_estados`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`cat_estados` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`cat_estados` (
  `cat_estados_id` INT NOT NULL AUTO_INCREMENT,
  `clave` VARCHAR(15) NULL,
  `nombre` VARCHAR(70) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  `cat_paises_id` INT NOT NULL,
  PRIMARY KEY (`cat_estados_id`),
  INDEX `fk_cat_estados_cat_paises1_idx` (`cat_paises_id` ASC),
  CONSTRAINT `fk_cat_estados_cat_paises1`
    FOREIGN KEY (`cat_paises_id`)
    REFERENCES `grupotermo`.`cat_paises` (`cat_paises_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`cat_municipios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`cat_municipios` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`cat_municipios` (
  `cat_municipios_id` INT NOT NULL AUTO_INCREMENT,
  `cat_estados_id` INT NOT NULL,
  `clave` VARCHAR(15) NULL,
  `nombre` VARCHAR(70) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`cat_municipios_id`),
  INDEX `fk_cat_municipios_cat_estados1_idx` (`cat_estados_id` ASC),
  CONSTRAINT `fk_cat_municipios_cat_estados1`
    FOREIGN KEY (`cat_estados_id`)
    REFERENCES `grupotermo`.`cat_estados` (`cat_estados_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`materiales_ubicacion`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`materiales_ubicacion` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`materiales_ubicacion` (
  `materiales_ubicacion_id` INT NOT NULL AUTO_INCREMENT,
  `materiales_precios_id` INT NOT NULL,
  `longitud` VARCHAR(50) NULL,
  `latitud` VARCHAR(50) NULL,
  `calle` VARCHAR(50) NULL,
  `num_int` VARCHAR(15) NULL,
  `num_ext` VARCHAR(15) NULL,
  `colonia` VARCHAR(50) NULL,
  `cat_municipios_id` INT NULL,
  `nombre` VARCHAR(200) NULL,
  PRIMARY KEY (`materiales_ubicacion_id`),
  INDEX `fk_materiales_ubicacion_cat_municipios1_idx` (`cat_municipios_id` ASC),
  INDEX `fk_materiales_ubicacion_materiales_precios1_idx` (`materiales_precios_id` ASC),
  CONSTRAINT `cat_municipios_id`
    FOREIGN KEY (`cat_municipios_id`)
    REFERENCES `grupotermo`.`cat_municipios` (`cat_municipios_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_materiales_ubicacion_materiales_precios1`
    FOREIGN KEY (`materiales_precios_id`)
    REFERENCES `grupotermo`.`materiales_precios` (`materiales_precios_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`empresas_clientes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`empresas_clientes` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`empresas_clientes` (
  `empresas_clientes_id` INT NOT NULL AUTO_INCREMENT,
  `clientes_id` INT NOT NULL,
  `empresas_id` INT NOT NULL,
  PRIMARY KEY (`empresas_clientes_id`),
  INDEX `fk_empresas_clientes_clientes1_idx` (`clientes_id` ASC),
  INDEX `fk_empresas_clientes_empresas1_idx` (`empresas_id` ASC),
  CONSTRAINT `fk_empresas_clientes_clientes1`
    FOREIGN KEY (`clientes_id`)
    REFERENCES `grupotermo`.`clientes` (`clientes_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresas_clientes_empresas1`
    FOREIGN KEY (`empresas_id`)
    REFERENCES `grupotermo`.`empresas` (`empresas_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`empresas_proveedores`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`empresas_proveedores` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`empresas_proveedores` (
  `empresas_proveedores_id` INT NOT NULL AUTO_INCREMENT,
  `empresas_id` INT NOT NULL,
  `proveedores_id` INT NOT NULL,
  PRIMARY KEY (`empresas_proveedores_id`),
  INDEX `fk_empresas_proveedores_empresas1_idx` (`empresas_id` ASC),
  INDEX `fk_empresas_proveedores_proveedores1_idx` (`proveedores_id` ASC),
  CONSTRAINT `fk_empresas_proveedores_empresas1`
    FOREIGN KEY (`empresas_id`)
    REFERENCES `grupotermo`.`empresas` (`empresas_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_empresas_proveedores_proveedores1`
    FOREIGN KEY (`proveedores_id`)
    REFERENCES `grupotermo`.`proveedores` (`proveedores_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`almacenes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`almacenes` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`almacenes` (
  `almacenes_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(70) NULL,
  `obras_id` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`almacenes_id`),
  INDEX `almacenes_obras_id_idx` (`obras_id` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`almacen_materiales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`almacen_materiales` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`almacen_materiales` (
  `almacen_materiales_id` INT NOT NULL AUTO_INCREMENT,
  `almacenes_id` INT NOT NULL,
  `empresas_id` INT NOT NULL,
  `materiales_id` INT NOT NULL,
  `clave` VARCHAR(45) NULL,
  `cantidad` DOUBLE(14,2) NOT NULL DEFAULT 0,
  `precio` DOUBLE(14,2) NOT NULL DEFAULT 0,
  `proveedores_id` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`almacen_materiales_id`),
  INDEX `fk_almacen_materiales_empresas1_idx` (`empresas_id` ASC),
  INDEX `fk_almacen_materiales_almacenes1_idx` (`almacenes_id` ASC),
  INDEX `fk_almacen_materiales_materiales1_idx` (`materiales_id` ASC),
  CONSTRAINT `fk_almacen_materiales_empresas1`
    FOREIGN KEY (`empresas_id`)
    REFERENCES `grupotermo`.`empresas` (`empresas_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_almacen_materiales_almacenes1`
    FOREIGN KEY (`almacenes_id`)
    REFERENCES `grupotermo`.`almacenes` (`almacenes_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_almacen_materiales_materiales1`
    FOREIGN KEY (`materiales_id`)
    REFERENCES `grupotermo`.`materiales` (`materiales_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`operacion_materiales`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`operacion_materiales` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`operacion_materiales` (
  `operacion_materiales_id` INT NOT NULL AUTO_INCREMENT,
  `tabla` VARCHAR(45) NULL,
  `elemento_id` INT NULL,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `obras_id` INT NOT NULL,
  `materiales_id` INT NOT NULL,
  `almacen_materiales_id` INT NOT NULL,
  PRIMARY KEY (`operacion_materiales_id`),
  INDEX `fk_operacion_materiales_obras1_idx` (`obras_id` ASC),
  INDEX `fk_operacion_materiales_materiales1_idx` (`materiales_id` ASC),
  INDEX `fk_operacion_materiales_almacen_materiales1_idx` (`almacen_materiales_id` ASC),
  CONSTRAINT `fk_operacion_materiales_obras1`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacion_materiales_materiales1`
    FOREIGN KEY (`materiales_id`)
    REFERENCES `grupotermo`.`materiales` (`materiales_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacion_materiales_almacen_materiales1`
    FOREIGN KEY (`almacen_materiales_id`)
    REFERENCES `grupotermo`.`almacen_materiales` (`almacen_materiales_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`operacion_servicios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`operacion_servicios` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`operacion_servicios` (
  `operacion_servicios_id` INT NOT NULL AUTO_INCREMENT,
  `tabla` VARCHAR(45) NULL,
  `elemento_id` INT NULL,
  `precio_unitario` DECIMAL(14,2) NULL,
  `obras_id` INT NOT NULL,
  `servicios_id` INT NOT NULL,
  PRIMARY KEY (`operacion_servicios_id`),
  INDEX `fk_operacion_servicios_obras1_idx` (`obras_id` ASC),
  INDEX `fk_operacion_servicios_servicios1_idx` (`servicios_id` ASC),
  CONSTRAINT `fk_operacion_servicios_obras1`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacion_servicios_servicios1`
    FOREIGN KEY (`servicios_id`)
    REFERENCES `grupotermo`.`servicios` (`servicios_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`operacion_mano_de_obra`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`operacion_mano_de_obra` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`operacion_mano_de_obra` (
  `operacion_mano_de_obra_id` INT NOT NULL,
  `tabla` VARCHAR(45) NULL,
  `elemento_id` INT NULL,
  `obras_id` INT NOT NULL,
  `mano_de_obra_id` INT NOT NULL,
  PRIMARY KEY (`operacion_mano_de_obra_id`),
  INDEX `fk_operacion_mano_de_obra_obras1_idx` (`obras_id` ASC),
  INDEX `fk_operacion_mano_de_obra_mano_de_obra1_idx` (`mano_de_obra_id` ASC),
  CONSTRAINT `fk_operacion_mano_de_obra_obras1`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacion_mano_de_obra_mano_de_obra1`
    FOREIGN KEY (`mano_de_obra_id`)
    REFERENCES `grupotermo`.`mano_de_obra` (`mano_de_obra_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`almacen_activos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`almacen_activos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`almacen_activos` (
  `almacen_activos_id` INT NOT NULL AUTO_INCREMENT,
  `almacenes_id` INT NOT NULL,
  `empresas_id` INT NOT NULL,
  `activos_id` INT NOT NULL,
  `clave` VARCHAR(45) NULL,
  `cantidad` DOUBLE(14,2) NOT NULL DEFAULT 0,
  `precio` DOUBLE(14,2) NOT NULL DEFAULT 0,
  `proveedores_id` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`almacen_activos_id`),
  INDEX `fk_almacen_activos_empresas1_idx` (`empresas_id` ASC),
  INDEX `fk_almacen_activos_almacenes1_idx` (`almacenes_id` ASC),
  INDEX `fk_almacen_activos_activos1_idx` (`activos_id` ASC),
  CONSTRAINT `fk_almacen_activos_empresas1`
    FOREIGN KEY (`empresas_id`)
    REFERENCES `grupotermo`.`empresas` (`empresas_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_almacen_activos_almacenes1`
    FOREIGN KEY (`almacenes_id`)
    REFERENCES `grupotermo`.`almacenes` (`almacenes_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_almacen_activos_activos1`
    FOREIGN KEY (`activos_id`)
    REFERENCES `grupotermo`.`activos` (`activos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`operacion_activos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`operacion_activos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`operacion_activos` (
  `operacion_activos_id` INT NOT NULL AUTO_INCREMENT,
  `tabla` VARCHAR(45) NULL,
  `elemento_id` INT NULL,
  `obras_id` INT NOT NULL,
  `activos_id` INT NOT NULL,
  `almacen_activos_id` INT NOT NULL,
  PRIMARY KEY (`operacion_activos_id`),
  INDEX `fk_operacion_activos_obras1_idx` (`obras_id` ASC),
  INDEX `fk_operacion_activos_activos1_idx` (`activos_id` ASC),
  INDEX `fk_operacion_activos_almacen_activos1_idx` (`almacen_activos_id` ASC),
  CONSTRAINT `fk_operacion_activos_obras1`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacion_activos_activos1`
    FOREIGN KEY (`activos_id`)
    REFERENCES `grupotermo`.`activos` (`activos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacion_activos_almacen_activos1`
    FOREIGN KEY (`almacen_activos_id`)
    REFERENCES `grupotermo`.`almacen_activos` (`almacen_activos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`operacion_gastos_indirectos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`operacion_gastos_indirectos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`operacion_gastos_indirectos` (
  `operacion_gastos_indirectos_id` INT NOT NULL AUTO_INCREMENT,
  `tabla` VARCHAR(45) NULL,
  `elemento_id` INT NULL,
  `obras_id` INT NOT NULL,
  `gastos_indirectos_id` INT NOT NULL,
  PRIMARY KEY (`operacion_gastos_indirectos_id`),
  INDEX `fk_operacion_gastos_indirectos_obras1_idx` (`obras_id` ASC),
  INDEX `fk_operacion_gastos_indirectos_gastos_indirectos1_idx` (`gastos_indirectos_id` ASC),
  CONSTRAINT `fk_operacion_gastos_indirectos_obras1`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacion_gastos_indirectos_gastos_indirectos1`
    FOREIGN KEY (`gastos_indirectos_id`)
    REFERENCES `grupotermo`.`gastos_indirectos` (`gastos_indirectos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`operacion_otros_gastos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`operacion_otros_gastos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`operacion_otros_gastos` (
  `operacion_otros_gastos_id` INT NOT NULL AUTO_INCREMENT,
  `tabla` VARCHAR(45) NULL,
  `elemento_id` INT NULL,
  `obras_obras_id` INT NOT NULL,
  `otros_gastos_otros_gastos_id` INT NOT NULL,
  PRIMARY KEY (`operacion_otros_gastos_id`),
  INDEX `fk_operacion_otros_gastos_obras1_idx` (`obras_obras_id` ASC),
  INDEX `fk_operacion_otros_gastos_otros_gastos1_idx` (`otros_gastos_otros_gastos_id` ASC),
  CONSTRAINT `fk_operacion_otros_gastos_obras1`
    FOREIGN KEY (`obras_obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operacion_otros_gastos_otros_gastos1`
    FOREIGN KEY (`otros_gastos_otros_gastos_id`)
    REFERENCES `grupotermo`.`otros_gastos` (`otros_gastos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`almacenes_bitacora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`almacenes_bitacora` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`almacenes_bitacora` (
  `almacenes_bitacora_id` INT NOT NULL AUTO_INCREMENT,
  `almacen_ingreso` INT NOT NULL DEFAULT 0,
  `almacen_egreso` INT NOT NULL DEFAULT 0,
  `fecha` DATE NULL,
  `hora` TIME NULL,
  `usuario_registra` INT NOT NULL DEFAULT 0,
  `usuario_autoriza` INT NOT NULL DEFAULT 0,
  `usuario_destino` INT NOT NULL DEFAULT 0,
  `activo_destino` INT NOT NULL DEFAULT 0,
  `almacen_materiales_id` INT NOT NULL DEFAULT 0,
  `almacen_activos_id` INT NOT NULL DEFAULT 0,
  `cantidad` DOUBLE(14,2) NOT NULL DEFAULT 0,
  PRIMARY KEY (`almacenes_bitacora_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`proveedores_contactos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`proveedores_contactos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`proveedores_contactos` (
  `proveedores_contactos_id` INT NOT NULL AUTO_INCREMENT,
  `nombres` VARCHAR(75) NULL,
  `apellidos` VARCHAR(85) NULL,
  `email` VARCHAR(75) NULL,
  `tel_fijo` VARCHAR(15) NULL,
  `tel_movil` VARCHAR(15) NULL,
  `tel_ext` VARCHAR(15) NULL,
  `puesto` VARCHAR(65) NULL,
  `proveedores_id` INT NOT NULL,
  PRIMARY KEY (`proveedores_contactos_id`),
  INDEX `fk_proveedores_contactos_proveedores1_idx` (`proveedores_id` ASC),
  CONSTRAINT `fk_proveedores_contactos_proveedores1`
    FOREIGN KEY (`proveedores_id`)
    REFERENCES `grupotermo`.`proveedores` (`proveedores_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`clientes_contactos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`clientes_contactos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`clientes_contactos` (
  `clientes_contactos_id` INT NOT NULL,
  `nombres` VARCHAR(70) NULL,
  `apellidos` VARCHAR(100) NULL,
  `email` VARCHAR(70) NULL,
  `tel_fijo` VARCHAR(15) NULL,
  `tel_movil` VARCHAR(15) NULL,
  `tel_ext` VARCHAR(15) NULL,
  `puesto` VARCHAR(65) NULL,
  `clientes_id` INT NOT NULL,
  PRIMARY KEY (`clientes_contactos_id`),
  INDEX `fk_clientes_contactos_clientes1_idx` (`clientes_id` ASC),
  CONSTRAINT `fk_clientes_contactos_clientes1`
    FOREIGN KEY (`clientes_id`)
    REFERENCES `grupotermo`.`clientes` (`clientes_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`empresas_departamentos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`empresas_departamentos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`empresas_departamentos` (
  `empresas_departamentos_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(65) NULL,
  `empresas_id` INT NOT NULL,
  PRIMARY KEY (`empresas_departamentos_id`),
  INDEX `fk_empresas_departamentos_empresas1_idx` (`empresas_id` ASC),
  CONSTRAINT `fk_empresas_departamentos_empresas1`
    FOREIGN KEY (`empresas_id`)
    REFERENCES `grupotermo`.`empresas` (`empresas_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`empresas_costos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`empresas_costos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`empresas_costos` (
  `empresas_costos_id` INT NOT NULL AUTO_INCREMENT,
  `descripcion` VARCHAR(250) NULL,
  `total_real` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `empresas_departamentos_id` INT NOT NULL,
  PRIMARY KEY (`empresas_costos_id`),
  INDEX `fk_empresas_costos_empresas_departamentos1_idx` (`empresas_departamentos_id` ASC),
  CONSTRAINT `fk_empresas_costos_empresas_departamentos1`
    FOREIGN KEY (`empresas_departamentos_id`)
    REFERENCES `grupotermo`.`empresas_departamentos` (`empresas_departamentos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`servicios_precios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`servicios_precios` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`servicios_precios` (
  `servicios_precios_id` INT NOT NULL AUTO_INCREMENT,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `servicios_id` INT NOT NULL,
  `proveedores_id` INT NOT NULL,
  PRIMARY KEY (`servicios_precios_id`),
  INDEX `fk_servicios_precios_servicios1_idx` (`servicios_id` ASC),
  INDEX `fk_servicios_precios_proveedores1_idx` (`proveedores_id` ASC),
  CONSTRAINT `fk_servicios_precios_servicios1`
    FOREIGN KEY (`servicios_id`)
    REFERENCES `grupotermo`.`servicios` (`servicios_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_servicios_precios_proveedores1`
    FOREIGN KEY (`proveedores_id`)
    REFERENCES `grupotermo`.`proveedores` (`proveedores_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`activos_precios`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`activos_precios` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`activos_precios` (
  `activos_precios_id` INT NOT NULL AUTO_INCREMENT,
  `precio_unitario` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `activos_id` INT NOT NULL,
  `proveedores_id` INT NOT NULL,
  PRIMARY KEY (`activos_precios_id`),
  INDEX `fk_activos_precios_activos1_idx` (`activos_id` ASC),
  INDEX `fk_activos_precios_proveedores1_idx` (`proveedores_id` ASC),
  CONSTRAINT `fk_activos_precios_activos1`
    FOREIGN KEY (`activos_id`)
    REFERENCES `grupotermo`.`activos` (`activos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_activos_precios_proveedores1`
    FOREIGN KEY (`proveedores_id`)
    REFERENCES `grupotermo`.`proveedores` (`proveedores_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`personal_contratos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`personal_contratos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`personal_contratos` (
  `personal_contratos_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(70) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`personal_contratos_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`tipos_regimen`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`tipos_regimen` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`tipos_regimen` (
  `tipos_regimen_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(70) NULL,
  `descripcion` VARCHAR(70) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`tipos_regimen_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`registro_patronal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`registro_patronal` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`registro_patronal` (
  `registro_patronal_id` INT NOT NULL AUTO_INCREMENT,
  `clave` VARCHAR(45) NULL,
  `descripcion` VARCHAR(80) NULL,
  `porcentaje_riesgo` DECIMAL(6,2) NOT NULL DEFAULT 0,
  `cat_estados_id` INT NOT NULL,
  `empresas_id` INT NOT NULL,
  PRIMARY KEY (`registro_patronal_id`),
  INDEX `fk_registro_patronal_cat_estados1_idx` (`cat_estados_id` ASC),
  INDEX `fk_registro_patronal_empresas1_idx` (`empresas_id` ASC),
  CONSTRAINT `fk_registro_patronal_cat_estados1`
    FOREIGN KEY (`cat_estados_id`)
    REFERENCES `grupotermo`.`cat_estados` (`cat_estados_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_registro_patronal_empresas1`
    FOREIGN KEY (`empresas_id`)
    REFERENCES `grupotermo`.`empresas` (`empresas_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`periodo_de_pago`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`periodo_de_pago` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`periodo_de_pago` (
  `periodo_de_pago_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(50) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`periodo_de_pago_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`personal`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`personal` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`personal` (
  `personal_id` INT NOT NULL AUTO_INCREMENT,
  `nombres` VARCHAR(70) NULL,
  `apellido_paterno` VARCHAR(45) NOT NULL,
  `apellido_materno` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATE NULL,
  `nacimiento_municipio_id` INT NOT NULL DEFAULT 0,
  `sexo` VARCHAR(10) NULL,
  `estado_civil` VARCHAR(50) NULL,
  `curp` VARCHAR(25) NULL,
  `rfc` VARCHAR(15) NULL,
  `foto_personal` VARCHAR(250) NULL,
  `tipo_empleado` VARCHAR(25) NULL,
  `turno` VARCHAR(25) NULL,
  `fecha_ingreso` DATE NULL,
  `direccion` VARCHAR(70) NULL,
  `direccion_municipio_id` INT NOT NULL DEFAULT 0,
  `tel_fijo` VARCHAR(15) NULL,
  `tel_movil` VARCHAR(15) NULL,
  `email` VARCHAR(80) NULL,
  `salario_diario_imss` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `salario_diario_real` DECIMAL(14,2) NOT NULL DEFAULT 0,
  `no_imss` VARCHAR(45) NULL,
  `credito_infonavit` VARCHAR(45) NULL,
  `credito_fonacot` VARCHAR(45) NULL,
  `tipo_credito` VARCHAR(45) NULL,
  `porcentaje_numero` DECIMAL(6,2) NOT NULL DEFAULT 0,
  `bancos_sucursal` VARCHAR(25) NULL,
  `numero_cuenta` VARCHAR(45) NULL,
  `clabe` VARCHAR(45) NULL,
  `fecha_ultima_baja` DATE NULL,
  `fecha_ultimo_ingreso` DATE NULL,
  `mano_de_obra_id` INT NOT NULL,
  `empresas_id` INT NOT NULL,
  `personal_contratos_id` INT NOT NULL,
  `tipos_regimen_id` INT NOT NULL,
  `registro_patronal_id` INT NOT NULL,
  `periodo_de_pago_id` INT NOT NULL,
  `empresas_departamentos_id` INT NOT NULL,
  `obras_id` INT NOT NULL,
  `cat_bancos_id` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`personal_id`),
  INDEX `fk_personal_mano_de_obra1_idx` (`mano_de_obra_id` ASC),
  INDEX `fk_personal_empresas1_idx` (`empresas_id` ASC),
  INDEX `fk_personal_personal_contratos1_idx` (`personal_contratos_id` ASC),
  INDEX `fk_personal_tipos_regimen1_idx` (`tipos_regimen_id` ASC),
  INDEX `fk_personal_registro_patronal1_idx` (`registro_patronal_id` ASC),
  INDEX `fk_personal_periodo_de_pago1_idx` (`periodo_de_pago_id` ASC),
  INDEX `fk_personal_empresas_departamentos1_idx` (`empresas_departamentos_id` ASC),
  INDEX `fk_personal_obras1_idx` (`obras_id` ASC),
  CONSTRAINT `fk_personal_mano_de_obra1`
    FOREIGN KEY (`mano_de_obra_id`)
    REFERENCES `grupotermo`.`mano_de_obra` (`mano_de_obra_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_empresas1`
    FOREIGN KEY (`empresas_id`)
    REFERENCES `grupotermo`.`empresas` (`empresas_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_personal_contratos1`
    FOREIGN KEY (`personal_contratos_id`)
    REFERENCES `grupotermo`.`personal_contratos` (`personal_contratos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_tipos_regimen1`
    FOREIGN KEY (`tipos_regimen_id`)
    REFERENCES `grupotermo`.`tipos_regimen` (`tipos_regimen_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_registro_patronal1`
    FOREIGN KEY (`registro_patronal_id`)
    REFERENCES `grupotermo`.`registro_patronal` (`registro_patronal_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_periodo_de_pago1`
    FOREIGN KEY (`periodo_de_pago_id`)
    REFERENCES `grupotermo`.`periodo_de_pago` (`periodo_de_pago_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_empresas_departamentos1`
    FOREIGN KEY (`empresas_departamentos_id`)
    REFERENCES `grupotermo`.`empresas_departamentos` (`empresas_departamentos_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_personal_obras1`
    FOREIGN KEY (`obras_id`)
    REFERENCES `grupotermo`.`obras` (`obras_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`cat_bancos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`cat_bancos` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`cat_bancos` (
  `cat_bancos_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `descripcion` VARCHAR(70) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`cat_bancos_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`conceptos_catalogo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`conceptos_catalogo` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`conceptos_catalogo` (
  `conceptos_catalogo_id` INT NOT NULL AUTO_INCREMENT,
  `clave` VARCHAR(100) NULL,
  `nombre` VARCHAR(500) NULL,
  `descripcion_corta` VARCHAR(200) NULL,
  `unidades_id` INT NOT NULL DEFAULT 0,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`conceptos_catalogo_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`conceptos_categoria`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`conceptos_categoria` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`conceptos_categoria` (
  `conceptos_categoria_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(100) NULL,
  `estatus` TINYINT NOT NULL DEFAULT 1,
  PRIMARY KEY (`conceptos_categoria_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`conceptos_cat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`conceptos_cat` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`conceptos_cat` (
  `conceptos_cat_id` INT NOT NULL AUTO_INCREMENT,
  `conceptos_catalogo_id` INT NOT NULL,
  `conceptos_categoria_id` INT NOT NULL,
  PRIMARY KEY (`conceptos_cat_id`),
  INDEX `fk_conceptos_cat_conceptos_catalogo1_idx` (`conceptos_catalogo_id` ASC),
  INDEX `fk_conceptos_cat_conceptos_categoria1_idx` (`conceptos_categoria_id` ASC),
  CONSTRAINT `fk_conceptos_cat_conceptos_catalogo1`
    FOREIGN KEY (`conceptos_catalogo_id`)
    REFERENCES `grupotermo`.`conceptos_catalogo` (`conceptos_catalogo_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_conceptos_cat_conceptos_categoria1`
    FOREIGN KEY (`conceptos_categoria_id`)
    REFERENCES `grupotermo`.`conceptos_categoria` (`conceptos_categoria_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `grupotermo`.`fases`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `grupotermo`.`fases` ;

CREATE TABLE IF NOT EXISTS `grupotermo`.`fases` (
  `fases_id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(200) NOT NULL,
  `fecha_inicio` DATE NULL,
  `fecha_fin` DATE NULL,
  PRIMARY KEY (`fases_id`))
ENGINE = InnoDB;

USE `grupotermo` ;

-- -----------------------------------------------------
-- Placeholder table for view `grupotermo`.`v_union_activos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `grupotermo`.`v_union_activos` (`union_activos_id` INT, `activos_id` INT, `tabla` INT, `elemento_id` INT, `obras_id` INT, `precio_unitario` INT, `costo_unitario` INT, `proveedor_id` INT, `es_rentado` INT, `nombre` INT, `precio_propio` INT);

-- -----------------------------------------------------
-- Placeholder table for view `grupotermo`.`v_union_materiales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `grupotermo`.`v_union_materiales` (`nombre` INT);

-- -----------------------------------------------------
-- Placeholder table for view `grupotermo`.`v_union_materiales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `grupotermo`.`v_union_materiales` (`union_materiales_id` INT, `materiales_id` INT, `tabla` INT, `elemento_id` INT, `obras_id` INT, `precio_unitario` INT, `costo_unitario` INT, `proveedor_id` INT, `es_rentado` INT, `nombre` INT, `precio_propio` INT);

-- -----------------------------------------------------
-- Placeholder table for view `grupotermo`.`v_union_servicios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `grupotermo`.`v_union_servicios` (`union_servicios_id` INT, `servicios_id` INT, `tabla` INT, `elemento_id` INT, `obras_id` INT, `precio_unitario` INT, `costo_unitario` INT, `proveedor_id` INT, `es_rentado` INT, `nombre` INT);

-- -----------------------------------------------------
-- Placeholder table for view `grupotermo`.`v_union_servicios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `grupotermo`.`v_union_servicios` (`union_servicios_id` INT, `servicios_id` INT, `tabla` INT, `elemento_id` INT, `obras_id` INT, `precio_unitario` INT, `costo_unitario` INT, `proveedor_id` INT, `es_rentado` INT, `nombre` INT, `precio_propio` INT);

-- -----------------------------------------------------
-- Placeholder table for view `grupotermo`.`v_conceptos_catalogo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `grupotermo`.`v_conceptos_catalogo` (`conceptos_catalogo_id` INT, `clave` INT, `nombre` INT, `descripcion_corta` INT, `unidades_id` INT, `estatus` INT, `unidad` INT, `categoria` INT, `conceptos_categoria_id` INT);

-- -----------------------------------------------------
-- View `grupotermo`.`v_union_activos`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `grupotermo`.`v_union_activos` ;
DROP TABLE IF EXISTS `grupotermo`.`v_union_activos`;
USE `grupotermo`;
CREATE OR REPLACE VIEW `v_union_activos` AS
SELECT ua.*, a.nombre, a.precio_propio
FROM union_activos ua
INNER JOIN activos a on ua.activos_id = a.activos_id;

-- -----------------------------------------------------
-- View `grupotermo`.`v_union_materiales`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `grupotermo`.`v_union_materiales` ;
DROP TABLE IF EXISTS `grupotermo`.`v_union_materiales`;
USE `grupotermo`;
CREATE OR REPLACE VIEW `v_union_materiales` AS
SELECT um.*, m.nombre, m.precio_propio
FROM union_materiales um
INNER JOIN materiales m on um.materiales_id = m.materiales_id;

-- -----------------------------------------------------
-- View `grupotermo`.`v_union_materiales`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `grupotermo`.`v_union_materiales` ;
DROP TABLE IF EXISTS `grupotermo`.`v_union_materiales`;
USE `grupotermo`;
CREATE OR REPLACE VIEW `v_union_materiales` AS
SELECT um.*, m.nombre, m.precio_propio
FROM union_materiales um
INNER JOIN materiales m on um.materiales_id = m.materiales_id;

-- -----------------------------------------------------
-- View `grupotermo`.`v_union_servicios`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `grupotermo`.`v_union_servicios` ;
DROP TABLE IF EXISTS `grupotermo`.`v_union_servicios`;
USE `grupotermo`;
CREATE OR REPLACE VIEW `v_union_servicios` AS
SELECT us.*, s.nombre, s.precio_propio
FROM union_servicios us
INNER JOIN servicios s on us.servicios_id = s.servicios_id;

-- -----------------------------------------------------
-- View `grupotermo`.`v_union_servicios`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `grupotermo`.`v_union_servicios` ;
DROP TABLE IF EXISTS `grupotermo`.`v_union_servicios`;
USE `grupotermo`;
CREATE OR REPLACE VIEW `v_union_servicios` AS
SELECT us.*, s.nombre, s.precio_propio
FROM union_servicios us
INNER JOIN servicios s on us.servicios_id = s.servicios_id;

-- -----------------------------------------------------
-- View `grupotermo`.`v_conceptos_catalogo`
-- -----------------------------------------------------
DROP VIEW IF EXISTS `grupotermo`.`v_conceptos_catalogo` ;
DROP TABLE IF EXISTS `grupotermo`.`v_conceptos_catalogo`;
USE `grupotermo`;
CREATE OR REPLACE VIEW `v_conceptos_catalogo` AS
SELECT cat.*, u.nombre as unidad, cate.nombre as categoria, cate.conceptos_categoria_id
FROM
	conceptos_catalogo cat
INNER JOIN conceptos_cat cc on cc.conceptos_catalogo_id = cat.conceptos_catalogo_id
INNER JOIN conceptos_categoria cate on cate.conceptos_categoria_id = cc.conceptos_categoria_id
INNER JOIN unidades u on cat.unidades_id = u.unidades_id;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `grupotermo`.`unidades`
-- -----------------------------------------------------
START TRANSACTION;
USE `grupotermo`;
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (1, 'mm', 'Milímetro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (2, 'cm', 'Centímetro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (3, 'dm', 'Decímetro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (4, 'm', 'Metro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (5, 'dam', 'Decámetro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (6, 'hm', 'Hectómetro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (7, 'km', 'Kilómetro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (8, 'mam', 'Miriámetro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (9, 'mm2', 'Milímetro Cuadrado', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (10, 'cm2', 'Centímetro Cuadrado', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (11, 'dm2', 'Decímetro Cuadrado', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (12, 'm2', 'Metro Cuadrado', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (13, 'dam2', 'Decámetro Cuadrado', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (14, 'hm2', 'Hectómetro Cuadrado', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (15, 'km2', 'Kilómetro Cuadrado', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (16, 'mam2', 'Miriámetro Cuadrado', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (17, 'mm3', 'Milímetro cúbico', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (18, 'cm3', 'Centímetro cúbico', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (19, 'dm3', 'Decímetro cúbico', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (20, 'm3', 'Metro cúbico', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (21, 'dm3', 'Decámetro cúbico', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (22, 'hm3', 'Hectómetro cúbico', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (23, 'km3', 'Kilómetro cúbico', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (24, 'ml', 'Mililitro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (25, 'cl', 'Centilitro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (26, 'dl', 'Decilitro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (27, 'l', 'Litro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (28, 'dl', 'Decalito', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (29, 'hl', 'Hectolitro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (30, 'kl', 'Kilolitro', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (31, 'mg', 'Milígramo', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (32, 'cg', 'Centigramo', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (33, 'g', 'Gramo', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (34, 'dg', 'Decagramo', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (35, 'Hg', 'Hectogramo', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (36, 'Kg', 'Kilogramo', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (37, 'Q', 'Quintales', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (38, 'Tn', 'Toneladas', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (39, 'Servicio', 'Servicio', DEFAULT);
INSERT INTO `grupotermo`.`unidades` (`unidades_id`, `nombre`, `descripcion`, `estatus`) VALUES (40, 'Unidad', 'Unidad', DEFAULT);

COMMIT;


-- -----------------------------------------------------
-- Data for table `grupotermo`.`personal_contratos`
-- -----------------------------------------------------
START TRANSACTION;
USE `grupotermo`;
INSERT INTO `grupotermo`.`personal_contratos` (`personal_contratos_id`, `nombre`, `descripcion`, `estatus`) VALUES (1, 'Indeterminado', 'Indeterminado', 1);
INSERT INTO `grupotermo`.`personal_contratos` (`personal_contratos_id`, `nombre`, `descripcion`, `estatus`) VALUES (2, 'Determinado', 'Determinado', 1);
INSERT INTO `grupotermo`.`personal_contratos` (`personal_contratos_id`, `nombre`, `descripcion`, `estatus`) VALUES (3, 'Eventual de la construccion', 'Eventual de la construccion', 1);
INSERT INTO `grupotermo`.`personal_contratos` (`personal_contratos_id`, `nombre`, `descripcion`, `estatus`) VALUES (4, 'Eventual del campo', 'Eventual del campo', 1);
INSERT INTO `grupotermo`.`personal_contratos` (`personal_contratos_id`, `nombre`, `descripcion`, `estatus`) VALUES (5, 'A prueba', 'A prueba', 1);
INSERT INTO `grupotermo`.`personal_contratos` (`personal_contratos_id`, `nombre`, `descripcion`, `estatus`) VALUES (6, 'Capacitacion Inicial', 'Capacitacion Inicial', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `grupotermo`.`tipos_regimen`
-- -----------------------------------------------------
START TRANSACTION;
USE `grupotermo`;
INSERT INTO `grupotermo`.`tipos_regimen` (`tipos_regimen_id`, `nombre`, `descripcion`, `estatus`) VALUES (1, 'Sueldos y salarios', 'Sueldos y salarios', 1);
INSERT INTO `grupotermo`.`tipos_regimen` (`tipos_regimen_id`, `nombre`, `descripcion`, `estatus`) VALUES (2, 'Jubilados', 'Jubilados', 1);
INSERT INTO `grupotermo`.`tipos_regimen` (`tipos_regimen_id`, `nombre`, `descripcion`, `estatus`) VALUES (3, 'Pensionados', 'Pensionados', 1);
INSERT INTO `grupotermo`.`tipos_regimen` (`tipos_regimen_id`, `nombre`, `descripcion`, `estatus`) VALUES (4, 'Asimilados a salarios, Miembros de las Sociedades Cooperativas', 'Asimilados a salarios, Miembros de las Sociedades Cooperativas', 1);
INSERT INTO `grupotermo`.`tipos_regimen` (`tipos_regimen_id`, `nombre`, `descripcion`, `estatus`) VALUES (5, 'Asimilados a salarios, Integrantes de Sociedades y Asociaciones', 'Asimilados a salarios, Integrantes de Sociedades y Asociaciones', 1);
INSERT INTO `grupotermo`.`tipos_regimen` (`tipos_regimen_id`, `nombre`, `descripcion`, `estatus`) VALUES (6, 'Asimilados a salarios, Miembros de consejos directivos, de', 'Asimilados a salarios, Miembros de consejos directivos, de', 1);
INSERT INTO `grupotermo`.`tipos_regimen` (`tipos_regimen_id`, `nombre`, `descripcion`, `estatus`) VALUES (7, 'Asimilados a salarios, Actividad empresarial (comisionistas)', 'Asimilados a salarios, Actividad empresarial (comisionistas)', 1);
INSERT INTO `grupotermo`.`tipos_regimen` (`tipos_regimen_id`, `nombre`, `descripcion`, `estatus`) VALUES (8, 'Asimilados a salarios, Honorarios asimilados a salarios', 'Asimilados a salarios, Honorarios asimilados a salarios', 1);
INSERT INTO `grupotermo`.`tipos_regimen` (`tipos_regimen_id`, `nombre`, `descripcion`, `estatus`) VALUES (9, 'Asimilados a salarios, Ingresos acciones o títulos valor', 'Asimilados a salarios, Ingresos acciones o títulos valor', 1);

COMMIT;


-- -----------------------------------------------------
-- Data for table `grupotermo`.`periodo_de_pago`
-- -----------------------------------------------------
START TRANSACTION;
USE `grupotermo`;
INSERT INTO `grupotermo`.`periodo_de_pago` (`periodo_de_pago_id`, `nombre`, `estatus`) VALUES (1, 'Semanal', 1);
INSERT INTO `grupotermo`.`periodo_de_pago` (`periodo_de_pago_id`, `nombre`, `estatus`) VALUES (2, 'Quincenal', 1);
INSERT INTO `grupotermo`.`periodo_de_pago` (`periodo_de_pago_id`, `nombre`, `estatus`) VALUES (3, 'Mensual', 1);

COMMIT;

